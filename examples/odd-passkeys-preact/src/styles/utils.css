.truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.icon {
  display: inline-block;
  width: 1.5em;
  height: 1.5em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}

.Box {
  background-color: var(--background-alt);
  border-radius: 6px;
  padding: 10px;
}

.Box-text {
  color: #888;
}

.Box-svg {
  display: inline;
  vertical-align: middle;
}

.Grid {
  --fl-gap-h: 1em; /* This needs to have a unit for calc() below */
  --fl-gap-v: 1em; /* This needs to have a unit for calc() below */
  display: flex;
  flex-wrap: wrap;
  gap: var(--fl-gap-v, 0px) var(--fl-gap-h, 0px);
}

.Grid > * {
  flex: 0 0 100%;
}

@media screen and (min-width: 640px) {
  .Grid > * {
    flex: 0 0 calc(1 / 2 * 100% - (1 - 1 / 2) * var(--fl-gap-h));
  }
}

@media screen and (min-width: 960px) {
  .Grid > * {
    flex: 0 0 calc(1 / 3 * 100% - (1 - 1 / 3) * var(--fl-gap-h));
  }
}

a.button {
  transition: background-color 0.1s linear, border-color 0.1s linear,
    color 0.1s linear, box-shadow 0.1s linear, transform 0.1s ease;
  color: var(--form-text);
  background-color: var(--button-base);
  font-family: inherit;
  font-size: inherit;
  margin-right: 6px;
  margin-bottom: 6px;
  padding: 10px;
  border: none;
  border-radius: 6px;
  outline: none;
  padding-right: 30px;
  padding-left: 30px;
  display: inline-block;
  vertical-align: bottom;
}
a.button:hover {
  background-color: var(--button-hover);
}
a.button:focus {
  box-shadow: 0 0 0 2px var(--focus);
}
a.button:active {
  transform: translateY(2px);
}
a.button:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}
